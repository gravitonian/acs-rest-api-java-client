/*
 * Alfresco Content Services REST API
 * **Core API**  Provides access to the core features of Alfresco Content Services. 
 *
 * OpenAPI spec version: 1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package org.alfresco.repository.remote.client.api;

import org.alfresco.repository.remote.client.ApiException;
import org.alfresco.repository.remote.client.model.Error;
import org.alfresco.repository.remote.client.model.PreferenceEntry;
import org.alfresco.repository.remote.client.model.PreferencePaging;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for PreferencesApi
 */
@Ignore
public class PreferencesApiTest {

    private final PreferencesApi api = new PreferencesApi();

    
    /**
     * Get a preference
     *
     * Gets a specific preference for person **personId**.  You can use the &#x60;-me-&#x60; string in place of &#x60;&lt;personId&gt;&#x60; to specify the currently authenticated user. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getPreferenceTest() throws ApiException {
        String personId = null;
        String preferenceName = null;
        List<String> fields = null;
        PreferenceEntry response = api.getPreference(personId, preferenceName, fields);

        // TODO: test validations
    }
    
    /**
     * List preferences
     *
     * Gets a list of preferences for person **personId**.  You can use the &#x60;-me-&#x60; string in place of &#x60;&lt;personId&gt;&#x60; to specify the currently authenticated user. Note that each preference consists of an **id** and a **value**.   The **value** can be of any JSON type. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listPreferencesTest() throws ApiException {
        String personId = null;
        Integer skipCount = null;
        Integer maxItems = null;
        List<String> fields = null;
        PreferencePaging response = api.listPreferences(personId, skipCount, maxItems, fields);

        // TODO: test validations
    }
    
}
