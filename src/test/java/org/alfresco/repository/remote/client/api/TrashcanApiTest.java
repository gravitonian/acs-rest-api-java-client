/*
 * Alfresco Content Services REST API
 * **Core API**  Provides access to the core features of Alfresco Content Services. 
 *
 * OpenAPI spec version: 1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package org.alfresco.repository.remote.client.api;

import org.alfresco.repository.remote.client.ApiException;
import org.alfresco.repository.remote.client.model.DeletedNodeEntry;
import org.alfresco.repository.remote.client.model.DeletedNodesPaging;
import org.alfresco.repository.remote.client.model.Error;
import org.alfresco.repository.remote.client.model.NodeEntry;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TrashcanApi
 */
@Ignore
public class TrashcanApiTest {

    private final TrashcanApi api = new TrashcanApi();

    
    /**
     * Permanently delete a deleted node
     *
     * **Note:** this endpoint is available in Alfresco 5.2 and newer versions.  Permanently deletes the deleted node **nodeId**. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteDeletedNodeTest() throws ApiException {
        String nodeId = null;
        api.deleteDeletedNode(nodeId);

        // TODO: test validations
    }
    
    /**
     * Get a deleted node
     *
     * **Note:** this endpoint is available in Alfresco 5.2 and newer versions.  Gets the specific deleted node **nodeId**. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getDeletedNodeTest() throws ApiException {
        String nodeId = null;
        List<String> include = null;
        DeletedNodeEntry response = api.getDeletedNode(nodeId, include);

        // TODO: test validations
    }
    
    /**
     * List deleted nodes
     *
     * **Note:** this endpoint is available in Alfresco 5.2 and newer versions.  Gets a list of deleted nodes for the current user.  If the current user is an administrator deleted nodes for all users will be returned.  The list of deleted nodes will be ordered with the most recently deleted node at the top of the list. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listDeletedNodesTest() throws ApiException {
        Integer skipCount = null;
        Integer maxItems = null;
        List<String> include = null;
        DeletedNodesPaging response = api.listDeletedNodes(skipCount, maxItems, include);

        // TODO: test validations
    }
    
    /**
     * Restore a deleted node
     *
     * **Note:** this endpoint is available in Alfresco 5.2 and newer versions.  Attempts to restore the deleted node **nodeId** to its original location.  If the node is successfully restored to its former primary parent, then only the  primary child association will be restored, including recursively for any primary  children. It should be noted that no other secondary child associations or peer  associations will be restored, for any of the nodes within the primary parent-child  hierarchy of restored nodes, irrespective of whether these associations were to  nodes within or outside of the restored hierarchy.   Also, any previously shared link will not be restored since it is deleted at the time  of delete of each node. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void restoreDeletedNodeTest() throws ApiException {
        String nodeId = null;
        List<String> fields = null;
        NodeEntry response = api.restoreDeletedNode(nodeId, fields);

        // TODO: test validations
    }
    
}
