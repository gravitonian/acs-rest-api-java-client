/*
 * Alfresco Content Services REST API
 * **Core API**  Provides access to the core features of Alfresco Content Services. 
 *
 * OpenAPI spec version: 1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package org.alfresco.repository.remote.client.api;

import org.alfresco.repository.remote.client.ApiException;
import org.alfresco.repository.remote.client.model.DownloadBodyCreate;
import org.alfresco.repository.remote.client.model.DownloadEntry;
import org.alfresco.repository.remote.client.model.Error;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DownloadsApi
 */
@Ignore
public class DownloadsApiTest {

    private final DownloadsApi api = new DownloadsApi();

    
    /**
     * Cancel a download
     *
     * **Note:** this endpoint is available in Alfresco 5.2.1 and newer versions.  Cancels the creation of a download request.  **Note:** The download node can be deleted using the **DELETE /nodes/{downloadId}** endpoint   By default, if the download node is not deleted it will be picked up by a cleaner job which removes download nodes older than a configurable amount of time (default is 1 hour)  Information about the existing progress at the time of cancelling can be retrieved by calling the **GET /downloads/{downloadId}** endpoint  The cancel operation is done asynchronously. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void cancelDownloadTest() throws ApiException {
        String downloadId = null;
        api.cancelDownload(downloadId);

        // TODO: test validations
    }
    
    /**
     * Create a new download
     *
     * **Note:** this endpoint is available in Alfresco 5.2.1 and newer versions.  Creates a new download node asynchronously, the content of which will be the zipped content of the **nodeIds** specified in the JSON body like this:  &#x60;&#x60;&#x60;JSON {     \&quot;nodeIds\&quot;:      [        \&quot;c8bb482a-ff3c-4704-a3a3-de1c83ccd84c\&quot;,        \&quot;cffa62db-aa01-493d-9594-058bc058eeb1\&quot;      ] } &#x60;&#x60;&#x60;  **Note:** The content of the download node can be obtained using the **GET /nodes/{downloadId}/content** endpoint         
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createDownloadTest() throws ApiException {
        DownloadBodyCreate downloadBodyCreate = null;
        List<String> fields = null;
        DownloadEntry response = api.createDownload(downloadBodyCreate, fields);

        // TODO: test validations
    }
    
    /**
     * Get a download
     *
     * **Note:** this endpoint is available in Alfresco 5.2.1 and newer versions.  Retrieve status information for download node **downloadId** 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getDownloadTest() throws ApiException {
        String downloadId = null;
        List<String> fields = null;
        DownloadEntry response = api.getDownload(downloadId, fields);

        // TODO: test validations
    }
    
}
